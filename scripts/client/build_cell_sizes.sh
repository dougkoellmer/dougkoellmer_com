#!/bin/bash

SEARCH_DIR="../../project/war/img/cell_content"
OUT_FILE="../../project/src/com/dougkoellmer/server/homecells/U_AutoGenHomeCellSize.java"
SETTINGS_FILE="../../project/src/com/dougkoellmer/shared/homecells/S_HomeCell.java"
THIS_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
THIS_PATH_SPLIT=(${THIS_PATH//dougkoellmer_com/ })
THIS_PATH=${THIS_PATH_SPLIT[1]}
THIS_FILE=`basename $0`
THIS_FILE="${THIS_PATH}/${THIS_FILE}"

STRIP_SPACING=$(grep -F -m 1 'IMG_STRIP_SPACING =' $SETTINGS_FILE);
STRIP_SPACING=$(echo $STRIP_SPACING | sed -re 's/.*= *([0-9]*);/\1/g')
MIN_WIDTH=512


printf "" > $OUT_FILE
printf "package com.dougkoellmer.server.homecells;\n\n" >> $OUT_FILE
printf "import swarm.shared.structs.CellSize;\n" >> $OUT_FILE
printf "import com.dougkoellmer.shared.homecells.E_HomeCell;\n\n" >> $OUT_FILE
printf "//AUTOGENERATED FROM ${THIS_FILE}\n" >> $OUT_FILE
printf "class U_AutoGenHomeCellSize\n" >> $OUT_FILE
printf "{\n" >> $OUT_FILE
printf "\tstatic CellSize getFocusedCellSize(E_HomeCell cell)\n" >> $OUT_FILE
printf "\t{\n" >> $OUT_FILE
printf "\t\tswitch(cell)\n" >> $OUT_FILE
printf "\t\t{\n" >> $OUT_FILE
printf "" >> $OUT_FILE

for entry in "$SEARCH_DIR"/*
do
	split=(${entry//\// })
	length=${#split[@]}
	filename=${split[length-1]};
	split=(${filename//\./ })
	cell_name=${split[0]}
	cell_name_upper=${cell_name^^}
	
	print_statement=false
	
	if [[ $entry == *.solo.* ]]
	then
		
		width=$(convert $entry -format "%w" info:)
		height=$(convert $entry -format "%h" info:)
		print_statement=true
		
	elif [[ $entry == *.strip_0.* ]]
	then
	
		width=$(convert $entry -format "%w" info:)
		height=$(convert $entry -format "%h" info:)
		count=$(ls -l $SEARCH_DIR/$cell_name* | wc -l)
		let "height = (height*count) + STRIP_SPACING*(count-1)"
		print_statement=true
	fi
	
	if (( $width < $MIN_WIDTH ));
	then
		width=$MIN_WIDTH
	fi
	
	if [ "$print_statement" = true ] ; then
		printf "\t\t\tcase ${cell_name_upper}: return new CellSize(${width}, ${height});\n" >> $OUT_FILE
	fi
	
done

printf "\t\t}\n" >> $OUT_FILE
printf "\n" >> $OUT_FILE
printf "\t\treturn null;\n" >> $OUT_FILE
printf "\t}\n" >> $OUT_FILE
printf "}\n" >> $OUT_FILE





